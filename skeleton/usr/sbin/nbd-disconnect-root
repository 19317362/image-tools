#!/bin/sh
# Thanks to the LTSP project
# If the root /dev/nbd0 device is unmounted on shutdown then nbd read
# errors occur, and if it isn't, then # the nbd-server process on the server
# doesn't terminate.
# Called by init scripts on reboot or shutdown.

export PATH="${PATH:+$PATH:}/usr/bin:/bin:/usr/local/bin:/sbin:/usr/sbin:/usr/local/sbin"

case "$RUNLEVEL" in
    0)
        key="o"
        command="poweroff -f"
        ;;
    6)
        key="b"
        command="reboot -d -f -i"
        ;;
    *)
        echo "nbd-disconnect should only be called by initscripts on reboot/shutdown." >&2
        exit 1
        ;;
esac

if [ -e /usr/sbin/xnbd-client ]; then
    NBD_CLIENT=/usr/sbin/xnbd-client
else
    NBD_CLIENT=/sbin/nbd-client
fi

disconnect() {
    # ltsp-client-core.upstart needs "console output" to show stderr
    echo "nbd-disconnect executing: " >&2
    # Cache the command in order to use it after nbd-client disconnects /!\ Doesn't work
    # $command --version >/dev/null 2>&1
    # $NBD_CLIENT -d "$root"
    # $command

    # Hack
    $NBD_CLIENT -d "$root"
    echo "$key" > /proc/sysrq-trigger
}

# Disconnect swap nbd devices first
while read device etc; do
    case "$device" in
        /dev/nbd[0-9])
            swapoff "$device"
            $NBD_CLIENT -d "$device"
            ;;
        /dev/mapper/swap[0-9])
            nbd_device=$(cryptsetup status "$device" | awk '/device:/{print $2}')
            swapoff "$device"
            cryptsetup remove "$device"
            case "$nbd_device" in
                /dev/nbd[1-9])
                    $NBD_CLIENT -d "$nbd_device"
                    ;;
            esac
            ;;
    esac
done < /proc/swaps

# If we're not using an nbd root, exit
unset root
for param in $(cat /proc/cmdline); do
    case "$param" in
        root=/dev/nbd[0-9])
            root="${param#root=}"
            ;;
    esac
done
test -n "$root" || exit 0

